version: '3.8'

services:
  # Main Video Streaming Application
  dispatch-monitoring:
    build:
      context: .
      dockerfile: Dockerfile
    image: dispatch-monitoring:latest
    container_name: dispatch-monitoring-app
    ports:
      - "5002:5002"
    volumes:
      - ./models:/app/models
      - ./results:/app/results
      - ./Dataset:/app/Dataset
      - ./feedback.db:/app/feedback.db
      - video-data:/app/videos
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONUNBUFFERED=1
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - dispatch-network

  # Training Service for Detection Models
  training-detection:
    build:
      context: .
      dockerfile: Dockerfile
    image: dispatch-monitoring:latest
    container_name: dispatch-training-detection
    profiles: ["training"]
    volumes:
      - ./models:/app/models
      - ./results:/app/results
      - ./Dataset:/app/Dataset
      - training-cache:/app/.cache
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONUNBUFFERED=1
    command: ["python", "training/train_detection.py"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - dispatch-network

  # Training Service for Classification Models
  training-classification:
    build:
      context: .
      dockerfile: Dockerfile
    image: dispatch-monitoring:latest
    container_name: dispatch-training-classification
    profiles: ["training"]
    volumes:
      - ./models:/app/models
      - ./results:/app/results
      - ./Dataset:/app/Dataset
      - training-cache:/app/.cache
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONUNBUFFERED=1
    command: ["python", "training/train_classification.py"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - dispatch-network

  # Database Service (for future expansion)
  database:
    image: postgres:15-alpine
    container_name: dispatch-database
    profiles: ["database"]
    environment:
      - POSTGRES_DB=dispatch_monitoring
      - POSTGRES_USER=dispatch_user
      - POSTGRES_PASSWORD=dispatch_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - dispatch-network

  # Monitoring Service with Grafana
  monitoring:
    image: grafana/grafana:latest
    container_name: dispatch-monitoring-dashboard
    profiles: ["monitoring"]
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - dispatch-network

  # File Server for Model and Result Management
  file-server:
    image: nginx:alpine
    container_name: dispatch-file-server
    profiles: ["fileserver"]
    ports:
      - "8080:80"
    volumes:
      - ./models:/usr/share/nginx/html/models:ro
      - ./results:/usr/share/nginx/html/results:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    networks:
      - dispatch-network

  # GPU Resource Monitor
  gpu-monitor:
    image: nvidia/cuda:11.8-base-ubuntu22.04
    container_name: dispatch-gpu-monitor
    profiles: ["monitoring"]
    command: ["nvidia-smi", "dmon", "-s", "pucvmet", "-d", "5"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    networks:
      - dispatch-network

# Named volumes for persistent storage
volumes:
  postgres-data:
    driver: local
  grafana-data:
    driver: local
  video-data:
    driver: local
  training-cache:
    driver: local

# Custom network for service communication
networks:
  dispatch-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 